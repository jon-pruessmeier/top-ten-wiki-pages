Microservice-Architecture with 3 Backend-Services and 1 Client:
    Backend:
        -Crawler: NodeJS/ExpressJS + Selenium
        -Middleware: NestJS
        -MongoDB
    Frontend:
        -React-Client

Plan:
    -first user of the day tries to get the data
    -middleware tests, if there is already data of the day
    -informs the crawler-service, that there has to to be an updated database
    -the crawler gets the top rated page of today and then directs to nine different random pages, from within the actual page (=> 10 pages)
    -adds the specific information to the database
    -returns to the middleware, that it finishes
    -middleware gets the information from the database and returns it to the Client
    -the client presents the top 10 pages
    -everybody is happy
